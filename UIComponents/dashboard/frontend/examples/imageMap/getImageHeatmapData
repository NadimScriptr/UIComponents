var log = require("log");
log.setLevel("INFO");

var value =   [  
                [Math.floor(Math.random() * 300) + 100 , Math.floor(Math.random() * 280) + 50 , 0.4],
                [Math.floor(Math.random() * 300) + 100 ,  Math.floor(Math.random() * 280) + 50, 0.4],
                [Math.floor(Math.random() * 300) + 100 ,  Math.floor(Math.random() * 280) + 50, 0.6],
                [Math.floor(Math.random() * 300) + 100 ,  Math.floor(Math.random() * 280) + 50, 1],
                [Math.floor(Math.random() * 300) + 100 ,  Math.floor(Math.random() * 280) + 50, 1]
            ] 

var body = request.body ? request.body : ((request.rawBody) ? request.rawBody : request.parameters);
var requestParams = typeof(body) == "string" ? JSON.parse(body) : body;

var publishResponse = function(channel, data, request) {
   var message = {"result": data};
   if(body && body.id) {
     message["id"] = body.id;
   } else {
     //Add a default id to identify the message published over the socket
      message["id"] = "grideye";
   }
   publish(channel, message);
}

publishResponse("responseChannel", value, request);

return value;