var log = require("log");
log.setLevel("INFO");

var requestParams = request.body;

var publishResponse = function(channel, data, request, id) {
   var message = {"result": data};
   if(request.body && request.body.id) {
     message["id"] = request.body.id;
   } else {
     if(!id) {
        id = "gauge"
     }
     //Add a default id to identify the message published over the socket
      message["id"] = id;
   }
   publish(channel, message);
}

// data for line, bar, and area charts
var data = [{ y: "2006", a: Math.floor((Math.random() * 100) + 1), b: Math.floor((Math.random() * 100) + 1) },
    { y: "2007", a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: "2008", a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: "2009", a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: "2010", a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: "2011", a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: "2012", a: Math.floor((Math.random() * 100) + 1), b: Math.floor((Math.random() * 100) + 1) }];


// data for line, bar, and area charts
var dataline = [{ y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1), b: Math.floor((Math.random() * 100) + 1) },
    { y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1),  b: Math.floor((Math.random() * 100) + 1) },
    { y: (new Date().getTime()), a: Math.floor((Math.random() * 100) + 1), b: Math.floor((Math.random() * 100) + 1) }];

// data for donut chart
var donutdata = [{label: "Cranes", value: Math.floor((Math.random() * 100) + 1) }, {label: "Drillers",value: Math.floor((Math.random() * 100) + 1) }, {label: "Blasters", value: Math.floor((Math.random() * 100) + 1) }];



var dygraphData  = [];
for (var i = 1; i <= 20; i++) {
    var m = "01", d = i;
    if (d > 31) { m = "02"; d -= 31; }
    if (m == "02" && d > 28) { m = "03"; d -= 28; }
    if (m == "03" && d > 31) { m = "04"; d -= 31; }
    if (d < 10) d = "0" + d;
    // two series, one with range 1-100, one with range 1-2M
    dygraphData.push([(new Date("2010/" + m + "/" + d)).getTime(),
                  i + Math.random(),
                  100 - (i + Math.floor((Math.random() * 100) + 1)),
                  10 * (1 + (i + Math.floor((Math.random() * 100) + 1)) * (100 - Math.floor((Math.random() * 100) + 1)) / (50 * 50)),
                  10 * (2 - (i + Math.floor((Math.random() * 100) + 1)) * (100 - Math.floor((Math.random() * 100) + 1)) / (50 * 50))]);
}
          


var windroseData = [
    {"direction": "E", "speeds": [Math.floor((Math.random() * 100) + 1), Math.floor((Math.random() * 100) + 1), Math.floor((Math.random() * 100) + 1), Math.floor((Math.random() * 100) + Math.floor((Math.random() * 100) + 1))]},
    {"direction": "ESE", "speeds": [Math.floor((Math.random() * 100) + 1), Math.floor((Math.random() * 100) + 1), 4]},
    {"direction": "SSE", "speeds": [Math.floor((Math.random() * 100) + 1), Math.floor((Math.random() * 100) + 1), 16]},
    {"direction": "S", "speeds": [Math.floor((Math.random() * 100) + 1), Math.floor((Math.random() * 100) + 1), 2, 1, 9, 11]},
    {"direction": "SSW", "speeds": [Math.floor((Math.random() * 100) + 1), Math.floor((Math.random() * 100) + 1), 7.5, 8]},
    {"direction": "WSW", "speeds": [Math.floor((Math.random() * 100) + 1), Math.floor((Math.random() * 100) + 1), 9]},
    {"direction": "W", "speeds": [Math.floor((Math.random() * 100) + 1), Math.floor((Math.random() * 100) + 1), Math.floor((Math.random() * 100) + 1), 9, 15, 19, 11]},
    {"direction": "WNW", "speeds": [Math.floor((Math.random() * 100) + 1), 17, Math.floor((Math.random() * 100) + 1)]},
    {"direction": "NNW", "speeds": [Math.floor((Math.random() * 100) + 1), 7]},
    {"direction": "N", "speeds": [Math.floor((Math.random() * 100) + 1), 0, 5, 9, 7]},
    {"direction": "NNE", "speeds": [Math.floor((Math.random() * 100) + 1), Math.floor((Math.random() * 100) + 1), 6.5]},
    {"direction": "ENE", "speeds": [Math.floor((Math.random() * 100) + 1), 30, Math.floor((Math.random() * 100) + 1)]}
];

var x_data =
  [ Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1)];
var y_data =
  [ Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1),Math.floor((Math.random() * 100) + 1)];
var z_data = [
  [ 94406, 102226, 100476, 104180, 95610, 101533, 102925, 101269, 99009, 92350, 104448],
  [ 93445, 104218, 103759, 96438, 97964, 92475, 98259, 95060, 96552, 91771, 100263],
  [ 92525, 103953, 103434, 100673, 92664, 92543, 90106, 90020, 91159, 92297, 98877],
  [ 104631, 94803, 97843, 100977, 90526, 102190, 101738, 101019, 95238, 99732, 93036],
  [ 94836, 93296, 90879, 94323, 94635, 91338, 93995, 94928, 90520, 99140, 98669],
  [ 103672, 103768, 102159, 102392, 99864, 93895, 95896, 97644, 93341, 96207, 98995],
  [ 91065, 103743, 101070, 92035, 102096, 104144, 103583, 98755, 101781, 100802, 98260],
  [ 96269, 94443, 93042, 98596, 94341, 94682, 90108, 92787, 103789, 96213, 100077],
  [ 92990, 90872, 103253, 92603, 92238, 100841, 99683, 90743, 97936, 103678, 102659],
  [ 95751, 100822, 92947, 91383, 92458, 103821, 97929, 94826, 90563, 94954, 100669],
  [ 90740, 102921, 97082, 95820, 91951, 100666, 99549, 90632, 103519, 91803, 99903],
];
var tdSurfaceData = {
  z: z_data,
  x: x_data,
  y: y_data
};

var plusOrMinus = Math.random() < 0.5 ? -1 : 1;
var accelerometerData = {};

accelerometerData.x = Math.floor((Math.random() * 100) + 1) * plusOrMinus;;
accelerometerData.y = Math.floor((Math.random() * 100) + 1) * plusOrMinus;;
accelerometerData.z = Math.floor((Math.random() * 360));


var countData = {"value": Math.floor(Math.random() * 100)};

var alertData =  {"value": "Fridge has been open for almost "+ Math.floor(Math.random() * 100) +" minutes"};

publishResponse("responseChannel", {"chart": data, "chartline":dataline ,"donut": donutdata, "dygraphs": dygraphData, "gauge": Math.floor((Math.random() * 100) + 1) , "speedometer": Math.floor((Math.random() * 100) + 1) , "odometer": Math.floor((Math.random() * 100) + 1) , "thermometer": Math.floor((Math.random() * 100) + 1) , "alert": "Fuel oil dropped to: "+Math.floor((Math.random() * 100) + 1), "windrose": windroseData, "accelerometer":accelerometerData, "count":countData, "alert": alertData }, request, "all");


return {"chart": data, "chartline":dataline ,"donut": donutdata , "dygraphs": dygraphData, "gauge": Math.floor((Math.random() * 100) + 1) , "speedometer": Math.floor((Math.random() * 100) + 1) , "odometer": Math.floor((Math.random() * 100) + 1) , "thermometer": Math.floor((Math.random() * 100) + 1) , "alert": "Fuel oil dropped to: "+Math.floor((Math.random() * 100) + 1), "windrose": windroseData, "accelerometer":accelerometerData, "count": countData, "alert": alertData, "3dsurface": tdSurfaceData};
